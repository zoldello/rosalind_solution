file_names = [
'DNA_counting_dna_nucleotides',
'RNA_transcribing_dna_into_rna',
'REVC_complementing_a_strand_of_dna',
'FIB_rabbits_and_recurrence_relations',
'GC_computing_gc_content',
'HAMM_counting_point_mutations',
'IPRB_mendels_first_law',
'PROT_translating_rna_into_protein',
'SUBS_finding_a_motif_in_dna',
'CONS_consensus_and_profile',
'FIBD_mortal_fibonacci_rabbits',
'GRPH_overlap_graphs',
'IEV_calculating_expected_offspring',
'LCSM_finding_a_shared_motif',
'LIA_independent_alleles',
'MPRT_finding_a_protein_motif',
'MRNA_inferring_mrna_from_protein',
'ORF_open_reading_frames',
'PERM_enumerating_gene_orders',
'PRTM_calculating_protein_mass',
'REVP_locating_restriction_sites',
'SPLC_rna_splicing',
'LEXF_enumerating_k-mers_lexicographically',
'LGIS_longest_increasing_subsequence',
'LONG_genome_assembly_as_shortest_superstring',
'PMCH_perfect_matchings_and_rna_secondary_structures',
'PPER_partial_permutations',
'PROB_introduction_to_random_strings',
'SIGN_enumerating_oriented_gene_orderings',
'SSEQ_finding_a_spliced_motif',
'TRAN_transitions_and_transversions',
'TREE_completing_a_tree',
'CAT_catalan_numbers_and_rna_secondary_structures',
'CORR_error_correction_in_reads',
'INOD_counting_phylogenetic_ancestors',
'KMER_k-mer_composition',
'KMP_speeding_up_motif_finding',
'LCSQ_finding_a_shared_spliced_motif',
'LEXV_ordering_strings_of_varying_length_lexicographically',
'MMCH_maximum_matchings_and_rna_secondary_structures',
'PDST_creating_a_distance_matrix',
'REAR_reversal_distance',
'RSTR_matching_random_motifs',
'SSET_counting_subsets',
'ASPC_introduction_to_alternative_splicing',
'EDIT_edit_distance',
'EVAL_expected_number_of_restriction_sites',
'MOTZ_motzkin_numbers_and_rna_secondary_structures',
'NWCK_distances_in_trees',
'SCSP_interleaving_two_motifs',
'SETO_introduction_to_set_operations',
'SORT_sorting_by_reversals',
'SPEC_inferring_protein_from_spectrum',
'TRIE_introduction_to_pattern_matching',
'CONV_comparing_spectra_with_the_spectral_convolution',
'CTBL_creating_a_character_table',
'DBRU_constructing_a_de_bruijn_graph',
'EDTA_edit_distance_alignment',
'FULL_inferring_peptide_from_full_spectrum',
'INDC_independent_segregation_of_chromosomes',
'ITWV_finding_disjoint_motifs_in_a_gene',
'LREP_finding_the_longest_multiple_repeat',
'NKEW_newick_format_with_edge_weights',
'RNAS_wobble_bonding_and_rna_secondary_structures',
'AFRQ_counting_disease_carriers',
'CSTR_creating_a_character_table_from_genetic_strings',
'CTEA_counting_optimal_alignments',
'CUNR_counting_unrooted_binary_trees',
'GLOB_global_alignment_with_scoring_matrix',
'PCOV_genome_assembly_with_perfect_coverage',
'PRSM_matching_a_spectrum_to_a_protein',
'QRT_quartets',
'SGRA_using_the_spectrum_graph_to_infer_peptides',
'SUFF_encoding_suffix_trees',
'CHBP_character-based_phylogeny',
'CNTQ_counting_quartets',
'EUBT_enumerating_unrooted_binary_trees',
'GASM_genome_assembly_using_reads',
'GCON_global_alignment_with_constant_gap_penalty',
'LING_linguistic_complexity_of_a_genome',
'LOCA_local_alignment_with_scoring_matrix',
'MEND_inferring_genotype_from_a_pedigree',
'MGAP_maximizing_the_gap_symbols_of_an_optimal_alignment',
'MREP_identifying_maximal_repeats',
'MULT_multiple_alignment',
'PDPL_creating_a_restriction_map',
'ROOT_counting_rooted_binary_trees',
'SEXL_sex-linked_inheritance',
'SPTD_phylogeny_comparison_with_split_distance',
'WFMD_the_wright-fisher_model_of_genetic_drift',
'ALPH_alignment-based_phylogeny',
'ASMQ_assessing_assembly_quality_with_n_and_n',
'CSET_fixing_an_inconsistent_character_set',
'EBIN_wright-fishers_expected_behavior',
'FOUN_the_founder_effect_and_genetic_drift',
'GAFF_global_alignment_with_scoring_matrix_and_affine_gap_penalty',
'GREP_genome_assembly_with_perfect_coverage_and_repeats',
'OAP_overlap_alignment',
'QRTD_quartet_distance',
'SIMS_finding_a_motif_with_modifications',
'SMGB_semiglobal_alignment',
'KSIM_finding_all_similar_motifs',
'LAFF_local_alignment_with_affine_gap_penalty',
'OSYM_isolating_symbols_in_alignments',
'RSUB_identifying_reversing_substitutions',
]

# run this with case as it creates files
for index, file_name in enumerate(file_names):
    base_name= f'{index + 1}_{file_name}.py'
    # dev_file_name = f'problem_{base_name}'
    # test_file_name = f'test_{base_name}'
    # open(dev_file_name, 'w')
    # open(test_file_name, 'w')
    # open(f'question_set_{base_name}'.replace('py', 'txt'), 'w') 
    pass